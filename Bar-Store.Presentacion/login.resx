<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AABAREQDQEREBDhAQAJHR0c1R0dHd0dHR5lHR0fXR0dH3EdHR9xHR0fZR0dHn0dHR3hHR0c4OEFBAkBE
        RARAREQDQEREA0BERARAREQEQkVFBkRGRghGR0caR0dHu0dHR/9HR0f/R0dHx0ZHRyBERkYIQ0VFBkBE
        RARAREQEQEREBD1DQwIOGRkAAAsLAAAKCgAAAAAASEhIAEdHR31HR0fiR0dH4kdHR4oSICAA////AAAI
        CAAACwsADRcXAD1DQwJHR0cpR0dHc0dHR31HR0d9R0dHfUdHR31HR0eOR0dHnUdHR51HR0eQR0dHfUdH
        R31HR0d9R0dHfUdHR3NGR0cpR0dHokdHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dH
        R/9HR0f/R0dH/0dHR/9HR0f/R0dHo0dHR5RHR0d+R0dHc0dHR3tHR0eIR0dHfEdHR3RHR0d0R0dHdEdH
        R3RHR0d0R0dHdEdHR3RHR0d0R0dHfkdHR5RHR0d2R0dHEEdHRwBHR0dPR0dHfEdHR1BHR0chR0dHWUdH
        R1lHR0dOR0dHC0dHRwAAAAAAR0dHAEdHRxBHR0d2R0dHd0ZHRxQPLy8AR0dHWUdHR4JHR0daR0dHMEdH
        R3lHR0d5R0dHdkdHR2RGR0ckMT09ATpBQQJGR0cUR0dHd0dHR3dGR0cUNkBAAkZHRytHR0diRkdHLEZG
        RhJGR0cqRkdHKkZHRylGR0ciRkZGC0ZHRxRGR0cWRkdHE0dHR3dHR0d3RkdHFAAmJgBHR0dfR0dHhkdH
        R2BGR0crR0dHa0dHR2xHR0deRkdHHkdHR2JHR0emR0dHVEZGRhFHR0d3R0dHd0ZHRxQoOjoBR0dHSEdH
        R3dHR0dJRkdHKkdHR2lHR0dqR0dHW0dHRzlHR0fpR0dHtEVGRg9GR0cTR0dHd0dHR3dGR0cUNkBAAkdH
        Ry1HR0deRkdHK0VGRhFGR0coRkdHKUZHRyJGR0cgR0dHYEdHRz1CRUUGRkdHFEdHR3dHR0d3RkdHFAAe
        HgBHR0dkR0dHq0dHR1FHR0cxR0dHeUdHR3lHR0duRkdHJkZGRgcyPT0APkNDA0ZHRxRHR0d3R0dHd0ZG
        RhJkVFQAR0dHO0dHR1lHR0dKRkdHLEdHR1tHR0dbR0dHW0dHR1tGR0chABAQACs7OwFGRkYSR0dHd0dH
        R5BHR0ebR0dHlEdHR5NHR0eTR0dHlUdHR5RHR0eUR0dHlEdHR5RHR0eUR0dHlEdHR5RHR0eUR0dHm0dH
        R5BHR0dGR0dHsEdHR71HR0e8R0dHvEdHR7xHR0e8R0dHvEdHR7xHR0e8R0dHvEdHR7xHR0e8R0dHvUdH
        R7BHR0dGAAAAAAAAAAB8PgAAAAAAAAAAAAAAAAAAIBwAACAAAAAAAAAAIAAAAAAAAAAAAAAAIAgAACAI
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>